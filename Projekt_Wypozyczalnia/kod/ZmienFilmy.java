import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/*
 *  Klasa ZmienFilmy
 *
 *  Klasa pozwala na stworzenie, zmiane oraz usuniecie filmow, oraz na
 *  przegladanie listy filmow.
 *
 *  Autor: Adam Filipowicz
 *  Data: 07 stycznia 2018 r.
 */
public class ZmienFilmy extends javax.swing.JFrame {
    private String nazwaKonta;
    protected static OpcjeS opcje;
    private int numerStrony;
    protected Wypozyczalnia wypozyczalnia;
    protected static JOptionUserDialog UI = new JOptionUserDialog();
    private boolean wyszukane;
    private int iterator;
    private int iteratorPierwszego;
    private int iteratorOstatniego;
    
    private ZmienFilmy() {}
    
    public ZmienFilmy(String nazwaKonta, Wypozyczalnia wypozyczalnia) throws SQLException{
        initComponents();
        wyszukane = false;
        this.nazwaKonta = nazwaKonta;
        this.wypozyczalnia = wypozyczalnia;
        numerStrony = 1;
        iterator = 0;
        iteratorPierwszego = 1;
        iteratorOstatniego = 1;
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
        aktualizujFilmy();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        gatunekText = new javax.swing.JTextField();
        rokText = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        stworzButton = new javax.swing.JButton();
        IDText = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        poprzedniaStronaButton = new javax.swing.JButton();
        nastepnaStronaButton = new javax.swing.JButton();
        numerStronyText = new javax.swing.JTextField();
        nazwaText = new javax.swing.JTextField();
        wrocSButton = new javax.swing.JButton();
        edytujButton = new javax.swing.JButton();
        usunButton = new javax.swing.JButton();
        znajdzButton = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        cenaText = new javax.swing.JTextField();
        rezyserText = new javax.swing.JTextField();
        aktorzyText = new javax.swing.JTextField();
        film1Button = new javax.swing.JButton();
        film2Button = new javax.swing.JButton();
        film3Button = new javax.swing.JButton();
        film4Button = new javax.swing.JButton();
        film5Button = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        opisText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Edytuj filmy");

        jTextField5.setEditable(false);
        jTextField5.setText("ID filmu");

        jTextField6.setEditable(false);
        jTextField6.setText("Gatunek filmu");

        jTextField7.setEditable(false);
        jTextField7.setText("Nazwa filmu");

        jTextField8.setEditable(false);
        jTextField8.setText("Rok powstania");

        stworzButton.setText("Stworz");
        stworzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stworzButtonActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("Edycja filmow:");

        poprzedniaStronaButton.setText("Poprzednia strona");
        poprzedniaStronaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poprzedniaStronaButtonActionPerformed(evt);
            }
        });

        nastepnaStronaButton.setText("Nastepna strona");
        nastepnaStronaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nastepnaStronaButtonActionPerformed(evt);
            }
        });

        numerStronyText.setEditable(false);
        numerStronyText.setText("Strona: ");

        wrocSButton.setText("Wroc do konta sprzedawcy");
        wrocSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrocSButtonActionPerformed(evt);
            }
        });

        edytujButton.setText("Edytuj");
        edytujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytujButtonActionPerformed(evt);
            }
        });

        usunButton.setText("Usun");
        usunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunButtonActionPerformed(evt);
            }
        });

        znajdzButton.setText("Znajdź");
        znajdzButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                znajdzButtonActionPerformed(evt);
            }
        });

        jTextField4.setEditable(false);
        jTextField4.setText("Lista filmow:");

        jTextField9.setEditable(false);
        jTextField9.setText("Opis filmu");

        jTextField11.setEditable(false);
        jTextField11.setText("Reżyserzy");
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jTextField12.setEditable(false);
        jTextField12.setText("Aktorzy");

        film1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film1ButtonActionPerformed(evt);
            }
        });

        film2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film2ButtonActionPerformed(evt);
            }
        });

        film3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film3ButtonActionPerformed(evt);
            }
        });

        film4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film4ButtonActionPerformed(evt);
            }
        });

        film5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film5ButtonActionPerformed(evt);
            }
        });

        jTextField10.setEditable(false);
        jTextField10.setText("Cena");

        opisText.setColumns(20);
        opisText.setRows(5);
        jScrollPane1.setViewportView(opisText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField11)
                            .addComponent(jTextField12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nazwaText, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rezyserText, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aktorzyText, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gatunekText, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cenaText, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rokText, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(poprzedniaStronaButton)
                                        .addGap(151, 151, 151))
                                    .addComponent(nastepnaStronaButton, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(136, 136, 136)
                                    .addComponent(numerStronyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(111, 111, 111)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(film5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(film3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(film2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(film1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(film4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(55, 55, 55))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stworzButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(znajdzButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(usunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(wrocSButton))
                            .addComponent(edytujButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(film1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(film2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(film3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(film4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(film5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poprzedniaStronaButton)
                            .addComponent(nastepnaStronaButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numerStronyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nazwaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gatunekText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rokText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField9)
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cenaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rezyserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aktorzyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(znajdzButton)
                            .addComponent(edytujButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stworzButton)
                            .addComponent(usunButton)))
                    .addComponent(wrocSButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stworzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stworzButtonActionPerformed
        try {
            wypozyczalnia.dodajFilm(nazwaText.getText(), gatunekText.getText(), Integer.parseInt(rokText.getText()), opisText.getText(), Double.parseDouble(cenaText.getText()), rezyserText.getText(), aktorzyText.getText());
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
        try {
            if(wyszukane)
                aktualizujFilmyWyszukane();
            else
                aktualizujFilmy();
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
        UI.printInfoMessage("Film zostal dodany");
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_stworzButtonActionPerformed

    private void poprzedniaStronaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poprzedniaStronaButtonActionPerformed
        if(numerStrony>1){
            numerStrony--;
            try {
                if(wyszukane)
                    aktualizujFilmyWyszukaneOdTylu();
                else
                    aktualizujFilmyOdTylu();
            } catch (Exception ex) {
                UI.printErrorMessage(ex.getMessage());
                return;
            }
        }
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_poprzedniaStronaButtonActionPerformed

    private void nastepnaStronaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nastepnaStronaButtonActionPerformed
        if(film5Button.getText()!=null){
            numerStrony++;
            try {
                if(wyszukane)
                    aktualizujFilmyWyszukane();
                else
                    aktualizujFilmy();
            } catch (Exception ex) {
                UI.printErrorMessage(ex.getMessage());
                return;
            }
        }
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_nastepnaStronaButtonActionPerformed

    private void wrocSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrocSButtonActionPerformed
        try {
            opcje = new OpcjeS(nazwaKonta, wypozyczalnia);
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
        opcje.setResizable(false);
        opcje.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        opcje.setSize(800,500);
        opcje.setLocation(500,250);
        opcje.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_wrocSButtonActionPerformed

    private void edytujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytujButtonActionPerformed
        try {
            wypozyczalnia.zmienFilm(nazwaText.getText(), Integer.parseInt(rokText.getText()), opisText.getText(), Double.parseDouble(cenaText.getText()));
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
        try {
            if(wyszukane)
                aktualizujFilmyWyszukane();
            else
                aktualizujFilmy();
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
        UI.printInfoMessage("Film zostal zmieniony");
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_edytujButtonActionPerformed

    private void usunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunButtonActionPerformed
        try {
            String odpowiedz = UI.enterString("Czy na pewno usunac wybrany film? (TAK/NIE)");
            if (!odpowiedz.equals("TAK")) {
                UI.printErrorMessage("\nFilm nie zostal usuniety");
                return;
            }
            wypozyczalnia.wycofajFilm(nazwaText.getText());
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
        try {
            if(wyszukane)
                aktualizujFilmyWyszukane();
            else
                aktualizujFilmy();
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
        UI.printInfoMessage("Film zostal wycofany");
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_usunButtonActionPerformed

    private void znajdzButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_znajdzButtonActionPerformed
        numerStrony = 1;
        iterator = 0;
        iteratorPierwszego = 1;
        iteratorOstatniego = 1;
        
        if(nazwaText.getText().equals("") && gatunekText.getText().equals("") && rokText.getText().equals("")){
            wyszukane=false;
            try {
                aktualizujFilmy();
            } catch (SQLException ex) {
                UI.printErrorMessage(ex.getMessage());
                return;
            }
        }
        else{
            wyszukane=true;
            try {
                aktualizujFilmyWyszukane();
            } catch (SQLException ex) {
                UI.printErrorMessage(ex.getMessage());
                return;
            }
        }
        poprzedniaStronaButton.setEnabled(numerStrony!=1);
        nastepnaStronaButton.setEnabled(film5Button.getText()!=null);
    }//GEN-LAST:event_znajdzButtonActionPerformed

    private void film1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film1ButtonActionPerformed
        if(film1Button.getText()==null){
            return;
        }
        try {
            Film film = wypozyczalnia.znajdzFilmm(film1Button.getText());
            IDText.setText(Integer.toString(film.getID()));
            nazwaText.setText(film.getNazwaFilmu());
            gatunekText.setText(film.getGatunki());
            rokText.setText(Integer.toString(film.getRokPowstania()));
            opisText.setText(film.getOpis());
            cenaText.setText(Double.toString(film.getCena()));
            rezyserText.setText(film.getRezyserzy());
            aktorzyText.setText(film.getAktorzy());
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film1ButtonActionPerformed

    private void film2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film2ButtonActionPerformed
        if(film2Button.getText()==null){
            return;
        }
        try {
            Film film = wypozyczalnia.znajdzFilmm(film2Button.getText());
            IDText.setText(Integer.toString(film.getID()));
            nazwaText.setText(film.getNazwaFilmu());
            gatunekText.setText(film.getGatunki());
            rokText.setText(Integer.toString(film.getRokPowstania()));
            opisText.setText(film.getOpis());
            cenaText.setText(Double.toString(film.getCena()));
            rezyserText.setText(film.getRezyserzy());
            aktorzyText.setText(film.getAktorzy());
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film2ButtonActionPerformed

    private void film3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film3ButtonActionPerformed
        if(film3Button.getText()==null){
            return;
        }
        try {
            Film film = wypozyczalnia.znajdzFilmm(film3Button.getText());
            IDText.setText(Integer.toString(film.getID()));
            nazwaText.setText(film.getNazwaFilmu());
            gatunekText.setText(film.getGatunki());
            rokText.setText(Integer.toString(film.getRokPowstania()));
            opisText.setText(film.getOpis());
            cenaText.setText(Double.toString(film.getCena()));
            rezyserText.setText(film.getRezyserzy());
            aktorzyText.setText(film.getAktorzy());
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film3ButtonActionPerformed

    private void film4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film4ButtonActionPerformed
        if(film4Button.getText()==null){
            return;
        }
        try {
            Film film = wypozyczalnia.znajdzFilmm(film4Button.getText());
            IDText.setText(Integer.toString(film.getID()));
            nazwaText.setText(film.getNazwaFilmu());
            gatunekText.setText(film.getGatunki());
            rokText.setText(Integer.toString(film.getRokPowstania()));
            opisText.setText(film.getOpis());
            cenaText.setText(Double.toString(film.getCena()));
            rezyserText.setText(film.getRezyserzy());
            aktorzyText.setText(film.getAktorzy());
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film4ButtonActionPerformed

    private void film5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film5ButtonActionPerformed
        if(film5Button.getText()==null){
            return;
        }
        try {
            Film film = wypozyczalnia.znajdzFilmm(film5Button.getText());
            IDText.setText(Integer.toString(film.getID()));
            nazwaText.setText(film.getNazwaFilmu());
            gatunekText.setText(film.getGatunki());
            rokText.setText(Integer.toString(film.getRokPowstania()));
            opisText.setText(film.getOpis());
            cenaText.setText(Double.toString(film.getCena()));
            rezyserText.setText(film.getRezyserzy());
            aktorzyText.setText(film.getAktorzy());
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film5ButtonActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed

    }//GEN-LAST:event_jTextField11ActionPerformed

    /**
     * Metoda aktualizuje numer strony, nazwy filmow na guzikach oraz znaczniki czy film jest dostepny czy nie.
     * Metoda wywolywana przy inicjalizacji klasy oraz przy zmianie strony filmow.
     */
    public void aktualizujFilmy() throws SQLException{
        iterator++;
        iteratorPierwszego = iterator;
        numerStronyText.setText("Strona: "+numerStrony);
        do{
            film1Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator++;
        } while(film1Button.getText()!=null && film1Button.getText().equals("XWX"));
        do{
            film2Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator++;
        } while(film2Button.getText()!=null && film2Button.getText().equals("XWX"));
        do{
            film3Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator++;
        } while(film3Button.getText()!=null && film3Button.getText().equals("XWX"));
        do{
            film4Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator++;
        } while(film4Button.getText()!=null && film4Button.getText().equals("XWX"));
        do{
            film5Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator++;
        } while(film5Button.getText()!=null && film5Button.getText().equals("XWX"));
        iterator--;
        iteratorOstatniego = iterator;
    }
    
    /**
     * Metoda aktualizuje numer strony, nazwy filmow na guzikach oraz znaczniki czy film jest dostepny czy nie.
     * Metoda wywolywana przy inicjalizacji klasy oraz przy zmianie strony filmow.
     */
    public void aktualizujFilmyWyszukane() throws SQLException{
        iterator++;
        iteratorPierwszego = iterator;
        numerStronyText.setText("Strona: "+numerStrony);
        int rokkText;
        if(rokText.getText().equals("")){
            rokkText=0;
        }
        else{
            rokkText = Integer.parseInt(rokText.getText());
        }
        do{
            film1Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator++;
        } while(film1Button.getText()!=null && film1Button.getText().equals("XWX"));
        do{
            film2Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator++;
        } while(film2Button.getText()!=null && film2Button.getText().equals("XWX"));
        do{
            film3Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator++;
        } while(film3Button.getText()!=null && film3Button.getText().equals("XWX"));
        do{
            film4Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator++;
        } while(film4Button.getText()!=null && film4Button.getText().equals("XWX"));
        do{
            film5Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator++;
        } while(film5Button.getText()!=null && film5Button.getText().equals("XWX"));
        iterator--;
        iteratorOstatniego = iterator;
    }
    
    /**
     * Metoda aktualizuje numer strony, nazwy filmow na guzikach oraz znaczniki czy film jest dostepny czy nie.
     * Metoda wywolywana przy inicjalizacji klasy oraz przy zmianie strony filmow.
     */
    public void aktualizujFilmyOdTylu() throws SQLException{
        iterator = iteratorPierwszego - 1;
        iteratorOstatniego = iterator;
        numerStronyText.setText("Strona: "+numerStrony);
        do{
            film5Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator--;
        } while(film5Button.getText()!=null && film5Button.getText().equals("XWX"));
        do{
            film4Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator--;
        } while(film4Button.getText()!=null && film4Button.getText().equals("XWX"));
        do{
            film3Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator--;
        } while(film3Button.getText()!=null && film3Button.getText().equals("XWX"));
        do{
            film2Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator--;
        } while(film2Button.getText()!=null && film2Button.getText().equals("XWX"));
        do{
            film1Button.setText(wypozyczalnia.znajdzNazweFilmu(iterator));
            iterator--;
        } while(film1Button.getText()!=null && film1Button.getText().equals("XWX"));
        iterator++;
        iteratorPierwszego = iterator;
        iterator = iteratorOstatniego;
    }
    
    /**
     * Metoda aktualizuje numer strony, nazwy filmow na guzikach oraz znaczniki czy film jest dostepny czy nie.
     * Metoda wywolywana przy inicjalizacji klasy oraz przy zmianie strony filmow.
     */
    public void aktualizujFilmyWyszukaneOdTylu() throws SQLException{
        iterator = iteratorPierwszego - 1;
        iteratorOstatniego = iterator;
        numerStronyText.setText("Strona: "+numerStrony);
        int rokkText;
        if(rokText.getText().equals("")){
            rokkText=0;
        }
        else{
            rokkText = Integer.parseInt(rokText.getText());
        }
        do{
            film5Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator--;
        } while(film5Button.getText()!=null && film5Button.getText().equals("XWX"));
        do{
            film4Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator--;
        } while(film4Button.getText()!=null && film4Button.getText().equals("XWX"));
        do{
            film3Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator--;
        } while(film3Button.getText()!=null && film3Button.getText().equals("XWX"));
        do{
            film2Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator--;
        } while(film2Button.getText()!=null && film2Button.getText().equals("XWX"));
        do{
            film1Button.setText(wypozyczalnia.znajdzFilmy(nazwaText.getText(), gatunekText.getText(), rokkText,iterator));
            iterator--;
        } while(film1Button.getText()!=null && film1Button.getText().equals("XWX"));
        iterator++;
        iteratorPierwszego = iterator;
        iterator = iteratorOstatniego;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ZmienFilmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ZmienFilmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ZmienFilmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ZmienFilmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ZmienFilmy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDText;
    private javax.swing.JTextField aktorzyText;
    private javax.swing.JTextField cenaText;
    private javax.swing.JButton edytujButton;
    private javax.swing.JButton film1Button;
    private javax.swing.JButton film2Button;
    private javax.swing.JButton film3Button;
    private javax.swing.JButton film4Button;
    private javax.swing.JButton film5Button;
    private javax.swing.JTextField gatunekText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton nastepnaStronaButton;
    private javax.swing.JTextField nazwaText;
    private javax.swing.JTextField numerStronyText;
    private javax.swing.JTextArea opisText;
    private javax.swing.JButton poprzedniaStronaButton;
    private javax.swing.JTextField rezyserText;
    private javax.swing.JTextField rokText;
    private javax.swing.JButton stworzButton;
    private javax.swing.JButton usunButton;
    private javax.swing.JButton wrocSButton;
    private javax.swing.JButton znajdzButton;
    // End of variables declaration//GEN-END:variables
}
